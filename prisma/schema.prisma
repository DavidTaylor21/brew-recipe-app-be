generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  recipes  Recipe[]
  grinders UserGrinder[]
}

model Grinder {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  users    UserGrinder[]
  recipes  Recipe[] 
}

model UserGrinder {
  userId    Int
  grinderId Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  grinder   Grinder  @relation(fields: [grinderId], references: [id], onDelete: Cascade)

  @@id([userId, grinderId])
}

model Coffee {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  roasteryId Int       
  roastery   Roastery  @relation(fields: [roasteryId], references: [id])
  origins    CoffeeOrigin[]   
  recipes    Recipe[]  
  custom     Boolean   @default(false) 
}

model Origin {
  id      Int      @id @default(autoincrement())
  country String   @unique
  coffees CoffeeOrigin[] 
}


model CoffeeOrigin {
  coffeeId  Int
  originId  Int
  coffee    Coffee  @relation(fields: [coffeeId], references: [id], onDelete: Cascade)
  origin    Origin  @relation(fields: [originId], references: [id], onDelete: Cascade)

  @@id([coffeeId, originId])
}

model Roastery {
  id      Int    @id @default(autoincrement())
  name    String @unique
  coffee  Coffee[]
}


model Recipe {
  id         Int       @id @default(autoincrement())
  title      String
  steps      String
  userId     Int
  grinderId  Int
  coffeeId   Int
  brewMethod String
  coffee     Coffee   @relation(fields: [coffeeId], references: [id])
  grinder    Grinder   @relation(fields: [grinderId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  createdAt  DateTime  @default(now())
}

